import { useState, useEffect, useRef } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { ScrollArea } from "@/components/ui/scroll-area";
import { Badge } from "@/components/ui/badge";
import { Separator } from "@/components/ui/separator";
import { useLanguage } from "@/hooks/use-language";
import { useAuth } from "@/hooks/use-auth";
import { 
  MessageSquare, 
  Bot, 
  User, 
  Send, 
  Sparkles, 
  Command,
  HelpCircle,
  AlertTriangle,
  Scale,
  Phone,
  FileText,
  Clock,
  CheckCircle,
  X
} from "lucide-react";
import { motion, AnimatePresence } from "framer-motion";

interface Message {
  id: string;
  content: string;
  isBot: boolean;
  timestamp: Date;
  suggestions?: string[];
  commands?: string[];
  isTyping?: boolean;
  category?: 'general' | 'legal' | 'emergency' | 'routing';
}

interface ModernChatbotProps {
  open: boolean;
  onOpenChange: (open: boolean) => void;
}

const UZBEK_GOVERNMENT_KNOWLEDGE = {
  agencies: {
    '–º–∞—Ö–∞–ª–ª–∞': {
      name: '–ú–∞—Ö–∞–ª–ª–∏–Ω—Å–∫–∏–π –∫–æ–º–∏—Ç–µ—Ç',
      responsibilities: ['–ö–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏', '–õ–æ–∫–∞–ª—å–Ω—ã–µ –¥–æ—Ä–æ–∂–Ω—ã–µ —Ä–∞–±–æ—Ç—ã', '–°–∞–Ω–∏—Ç–∞—Ä–∏—è —Ä–∞–π–æ–Ω–∞'],
      contact: '+998 (71) 123-45-67',
      hours: '9:00-18:00',
      competence: '–õ–æ–∫–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Ä–∞–π–æ–Ω–∞'
    },
    '—Ö–æ–∫–∏–º–∏—è—Ç': {
      name: '–•–æ–∫–∏–º–∏—è—Ç —Ä–∞–π–æ–Ω–∞',
      responsibilities: ['–ö—Ä—É–ø–Ω—ã–µ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã', '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã', '–≠–∫–æ–ª–æ–≥–∏—è'],
      contact: '+998 (71) 234-56-78',
      hours: '8:30-17:30',
      competence: '–†–∞–π–æ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã'
    },
    '–º–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ': {
      name: '–ü—Ä–æ—Ñ–∏–ª—å–Ω–æ–µ –º–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ',
      responsibilities: ['–°–∏—Å—Ç–µ–º–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã', '–ü–æ–ª–∏—Ç–∏–∫–∞ –≤ –æ–±–ª–∞—Å—Ç–∏', '–ö—Ä—É–ø–Ω—ã–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è'],
      contact: '+998 (71) 345-67-89',
      hours: '9:00-17:00',
      competence: '–°–∏—Å—Ç–µ–º–Ω—ã–µ –∏ –∫—Ä—É–ø–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã'
    }
  },
  procedures: {
    complaint_process: '–ñ–∞–ª–æ–±–∞ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –¥–Ω–µ–π —Å–æ–≥–ª–∞—Å–Ω–æ –ó–∞–∫–æ–Ω—É –†–£–∑ "–û–± –æ–±—Ä–∞—â–µ–Ω–∏—è—Ö –≥—Ä–∞–∂–¥–∞–Ω"',
    appeal_rights: '–í—ã –∏–º–µ–µ—Ç–µ –ø—Ä–∞–≤–æ –Ω–∞ –æ–±–∂–∞–ª–æ–≤–∞–Ω–∏–µ —Ä–µ—à–µ–Ω–∏—è –≤ –≤—ã—à–µ—Å—Ç–æ—è—â–∏–π –æ—Ä–≥–∞–Ω –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –¥–Ω–µ–π',
    document_requirements: '–î–ª—è –ø–æ–¥–∞—á–∏ –∂–∞–ª–æ–±—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è: –§–ò–û, –∞–¥—Ä–µ—Å, —Å—É—Ç—å –ø—Ä–æ–±–ª–µ–º—ã, –ø–æ–¥–ø–∏—Å—å'
  },
  legal_framework: '–ó–†–£-445 "–û–± –æ–±—Ä–∞—â–µ–Ω–∏—è—Ö –≥—Ä–∞–∂–¥–∞–Ω –∏ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –ª–∏—Ü"'
};

export function ModernChatbot({ open, onOpenChange }: ModernChatbotProps) {
  const { t } = useLanguage();
  const { user } = useAuth();
  const [messages, setMessages] = useState<Message[]>([]);
  const [input, setInput] = useState("");
  const [isTyping, setIsTyping] = useState(false);
  const messagesEndRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    if (open && messages.length === 0) {
      const greeting: Message = {
        id: Date.now().toString(),
        content: `–ü—Ä–∏–≤–µ—Ç, ${user?.firstName || '–¥–æ—Ä–æ–≥–æ–π –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω'}! üëã\n\n–Ø - –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ MuxlisaAI –¥–ª—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã Muloqot Plus. –ü–æ–º–æ–≥—É –≤–∞–º:\n\nüèõÔ∏è –ù–∞–ø—Ä–∞–≤–∏—Ç—å –∂–∞–ª–æ–±—É –≤ –Ω—É–∂–Ω–æ–µ –≤–µ–¥–æ–º—Å—Ç–≤–æ\nüìã –†–∞–∑—ä—è—Å–Ω–∏—Ç—å –≤–∞—à–∏ –ø—Ä–∞–≤–∞\nüö® –û–±—Ä–∞–±–æ—Ç–∞—Ç—å —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏\n‚öñÔ∏è –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –ø—Ä–∞–≤–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é\n\n–í–≤–µ–¥–∏—Ç–µ /–ø–æ–º–æ—â—å –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É.`,
        isBot: true,
        timestamp: new Date(),
        suggestions: [
          "–ü—Ä–æ–±–ª–µ–º–∞ —Å –¥–æ—Ä–æ–≥–∞–º–∏",
          "–ö–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏", 
          "–≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è —Å–∏—Ç—É–∞—Ü–∏—è",
          "–ú–æ–∏ –ø—Ä–∞–≤–∞",
          "/–ø–æ–º–æ—â—å"
        ],
        commands: ["/–ø–æ–º–æ—â—å", "/—ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ", "/–ø—Ä–∞–≤–∞", "/–∫–æ–Ω—Ç–∞–∫—Ç—ã"],
        category: 'general'
      };
      setMessages([greeting]);
    }
  }, [open, user]);

  useEffect(() => {
    messagesEndRef.current?.scrollIntoView({ behavior: "smooth" });
  }, [messages]);

  const generateBotResponse = async (userMessage: string): Promise<Message> => {
    const lowerMessage = userMessage.toLowerCase();
    
    // Command handling
    if (lowerMessage.startsWith('/')) {
      return handleCommand(lowerMessage);
    }
    
    // Emergency detection
    if (lowerMessage.includes('—ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ') || lowerMessage.includes('–∞–≤–∞—Ä–∏—è') || 
        lowerMessage.includes('–æ–ø–∞—Å–Ω–æ—Å—Ç—å') || lowerMessage.includes('–ø–æ–∂–∞—Ä')) {
      return {
        id: Date.now().toString(),
        content: `üö® –≠–ö–°–¢–†–ï–ù–ù–ê–Ø –°–ò–¢–£–ê–¶–ò–Ø –û–ë–ù–ê–†–£–ñ–ï–ù–ê!\n\n–ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å:\n‚Ä¢ –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ —Å–ª—É–∂–±—ã: 112\n‚Ä¢ –ú–ß–°: 101\n‚Ä¢ –ü–æ–ª–∏—Ü–∏—è: 102\n‚Ä¢ –°–∫–æ—Ä–∞—è –ø–æ–º–æ—â—å: 103\n\n–ï—Å–ª–∏ —Å–∏—Ç—É–∞—Ü–∏—è –Ω–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è, –æ–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –ø–æ–¥—Ä–æ–±–Ω–µ–µ –¥–ª—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –≤–µ–¥–æ–º—Å—Ç–≤–æ.`,
        isBot: true,
        timestamp: new Date(),
        suggestions: ["–ù–µ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ, –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å", "–°–≤—è–∑–∞—Ç—å—Å—è —Å 112"],
        category: 'emergency'
      };
    }
    
    // Government routing intelligence
    if (lowerMessage.includes('–¥–æ—Ä–æ–≥') || lowerMessage.includes('—è–º') || lowerMessage.includes('–∞—Å—Ñ–∞–ª—å—Ç')) {
      const agency = UZBEK_GOVERNMENT_KNOWLEDGE.agencies.—Ö–æ–∫–∏–º–∏—è—Ç;
      return {
        id: Date.now().toString(),
        content: `üõ£Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å –¥–æ—Ä–æ–≥–∞–º–∏ - —ç—Ç–æ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏—è **${agency.name}**\n\nüìã –í–∞—à–∞ –∂–∞–ª–æ–±–∞ –±—É–¥–µ—Ç –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∞:\n‚Ä¢ –ö–æ–Ω—Ç–∞–∫—Ç: ${agency.contact}\n‚Ä¢ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ${agency.hours}\n‚Ä¢ –°—Ä–æ–∫ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è: 15 –¥–Ω–µ–π\n\n–î–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É–∫–∞–∂–∏—Ç–µ:\n‚Ä¢ –¢–æ—á–Ω—ã–π –∞–¥—Ä–µ—Å –ø—Ä–æ–±–ª–µ–º—ã\n‚Ä¢ –•–∞—Ä–∞–∫—Ç–µ—Ä –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏—è\n‚Ä¢ –°—Ç–µ–ø–µ–Ω—å –æ–ø–∞—Å–Ω–æ—Å—Ç–∏`,
        isBot: true,
        timestamp: new Date(),
        suggestions: ["–°–æ–∑–¥–∞—Ç—å –∂–∞–ª–æ–±—É", "–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Å –∞–¥—Ä–µ—Å–æ–º", "–î—Ä—É–≥–∞—è –ø—Ä–æ–±–ª–µ–º–∞"],
        category: 'routing'
      };
    }
    
    if (lowerMessage.includes('–∂–∫—Ö') || lowerMessage.includes('–≤–æ–¥–∞') || lowerMessage.includes('–∫–∞–Ω–∞–ª–∏–∑–∞—Ü–∏—è') || 
        lowerMessage.includes('–æ—Ç–æ–ø–ª–µ–Ω–∏–µ') || lowerMessage.includes('—Å–≤–µ—Ç')) {
      const agency = UZBEK_GOVERNMENT_KNOWLEDGE.agencies.–º–∞—Ö–∞–ª–ª–∞;
      return {
        id: Date.now().toString(),
        content: `üè† –í–æ–ø—Ä–æ—Å—ã –ñ–ö–• —Ä–µ—à–∞–µ—Ç **${agency.name}**\n\nüìã –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:\n‚Ä¢ –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –º–∞—Ö–∞–ª–ª—É: ${agency.contact}\n‚Ä¢ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ${agency.hours}\n‚Ä¢ –ï—Å–ª–∏ –Ω–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ - –Ω–∞–ø—Ä–∞–≤–∏–º –≤ —Ö–æ–∫–∏–º–∏—è—Ç\n\n–î–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è —É–∫–∞–∂–∏—Ç–µ:\n‚Ä¢ –ê–¥—Ä–µ—Å –ø—Ä–æ–±–ª–µ–º—ã\n‚Ä¢ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã\n‚Ä¢ –ü—Ä–µ–¥—ã–¥—É—â–∏–µ –æ–±—Ä–∞—â–µ–Ω–∏—è`,
        isBot: true,
        timestamp: new Date(),
        suggestions: ["–ü–æ–¥–∞—Ç—å –∂–∞–ª–æ–±—É", "–ö–æ–Ω—Ç–∞–∫—Ç—ã –º–∞—Ö–∞–ª–ª—ã", "–≠—Å–∫–∞–ª–∏—Ä–æ–≤–∞—Ç—å –≤ —Ö–æ–∫–∏–º–∏—è—Ç"],
        category: 'routing'
      };
    }
    
    if (lowerMessage.includes('–ø—Ä–∞–≤') || lowerMessage.includes('–∑–∞–∫–æ–Ω') || lowerMessage.includes('–æ–±–∂–∞–ª–æ–≤–∞–Ω–∏–µ')) {
      return {
        id: Date.now().toString(),
        content: `‚öñÔ∏è –í–ê–®–ò –ü–†–ê–í–ê –ö–ê–ö –ì–†–ê–ñ–î–ê–ù–ò–ù–ê:\n\nüìñ –°–æ–≥–ª–∞—Å–Ω–æ ${UZBEK_GOVERNMENT_KNOWLEDGE.legal_framework}:\n\n‚úÖ –ü—Ä–∞–≤–æ –Ω–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ –≤ –ª—é–±–æ–π –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–π –æ—Ä–≥–∞–Ω\n‚úÖ –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –¥–Ω–µ–π\n‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∏—Å—å–º–µ–Ω–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞\n‚úÖ –û–±–∂–∞–ª–æ–≤–∞–Ω–∏–µ —Ä–µ—à–µ–Ω–∏—è –≤ –≤—ã—à–µ—Å—Ç–æ—è—â–∏–π –æ—Ä–≥–∞–Ω\n‚úÖ –ö–æ–º–ø–µ–Ω—Å–∞—Ü–∏—è –ø—Ä–∏ –¥–æ–∫–∞–∑–∞–Ω–Ω–æ–º —É—â–µ—Ä–±–µ\n\nüîÑ –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –æ–±–∂–∞–ª–æ–≤–∞–Ω–∏—è:\n‚Ä¢ –ü–æ–¥–∞—á–∞ –≤ –≤—ã—à–µ—Å—Ç–æ—è—â–∏–π –æ—Ä–≥–∞–Ω –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –¥–Ω–µ–π\n‚Ä¢ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∫–æ–ø–∏–π –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤\n‚Ä¢ –û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ –Ω–µ—Å–æ–≥–ª–∞—Å–∏—è`,
        isBot: true,
        timestamp: new Date(),
        suggestions: ["–ö–∞–∫ –æ–±–∂–∞–ª–æ–≤–∞—Ç—å", "–û–±—Ä–∞–∑–µ—Ü –∑–∞—è–≤–ª–µ–Ω–∏—è", "–°—Ä–æ–∫–∏ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è"],
        category: 'legal'
      };
    }
    
    // General intelligent response
    const responses = [
      `–ü–æ–Ω—è–ª –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É! ü§î\n\n–î–ª—è –Ω–∞–∏–±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è –ø–æ–º–æ–≥–∏—Ç–µ –º–Ω–µ:\n‚Ä¢ –û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –ø–æ–¥—Ä–æ–±–Ω–µ–µ\n‚Ä¢ –£–∫–∞–∂–∏—Ç–µ —Ç–æ—á–Ω—ã–π –∞–¥—Ä–µ—Å\n‚Ä¢ –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –æ–±—Ä–∞—â–µ–Ω–∏—è—Ö\n\n–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–ø—Ä–∞–≤–∏—Ç—å –∂–∞–ª–æ–±—É –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –≤–µ–¥–æ–º—Å—Ç–≤–æ –∏ —É—Å–∫–æ—Ä–∏—Ç—å —Ä–µ—à–µ–Ω–∏–µ.`,
      `–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ! üìù\n\n–ß—Ç–æ–±—ã –¥–∞—Ç—å —Ç–æ—á–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏, –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:\n‚Ä¢ –í –∫–∞–∫–æ–π —Å—Ñ–µ—Ä–µ –ø—Ä–æ–±–ª–µ–º–∞? (–¥–æ—Ä–æ–≥–∏, –ñ–ö–•, —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç, —ç–∫–æ–ª–æ–≥–∏—è)\n‚Ä¢ –ù–∞—Å–∫–æ–ª—å–∫–æ —Å—Ä–æ—á–Ω–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ä–µ—à–µ–Ω–∏–µ?\n‚Ä¢ –ï—Å—Ç—å –ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏–ª–∏ —Ñ–æ—Ç–æ –ø—Ä–æ–±–ª–µ–º—ã?\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /–ø–æ–º–æ—â—å –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π.`
    ];
    
    return {
      id: Date.now().toString(),
      content: responses[Math.floor(Math.random() * responses.length)],
      isBot: true,
      timestamp: new Date(),
      suggestions: ["–î–æ—Ä–æ–≥–∏", "–ñ–ö–•", "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç", "–≠–∫–æ–ª–æ–≥–∏—è", "/–ø–æ–º–æ—â—å"],
      category: 'general'
    };
  };

  const handleCommand = (command: string): Message => {
    switch (command) {
      case '/–ø–æ–º–æ—â—å':
      case '/help':
        return {
          id: Date.now().toString(),
          content: `ü§ñ –ö–û–ú–ê–ù–î–´ MUXLISAAI:\n\nüîß **–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**\n/–ø–æ–º–æ—â—å - —ç—Ç–æ –º–µ–Ω—é\n/—ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ - —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ —Å–ª—É–∂–±—ã\n/–ø—Ä–∞–≤–∞ - –≤–∞—à–∏ –ø—Ä–∞–≤–∞\n/–∫–æ–Ω—Ç–∞–∫—Ç—ã - –≤—Å–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã –≤–µ–¥–æ–º—Å—Ç–≤\n/—Å—Ç–∞—Ç—É—Å - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∂–∞–ª–æ–±—ã\n\nüìã **–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–æ–±–ª–µ–º:**\n‚Ä¢ –î–æ—Ä–æ–≥–∏ –∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç\n‚Ä¢ –ñ–ö–• –∏ –∫–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏\n‚Ä¢ –≠–∫–æ–ª–æ–≥–∏—è –∏ –ø—Ä–∏—Ä–æ–¥–∞\n‚Ä¢ –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å\n‚Ä¢ –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∏ –∑–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ\n\nüí° **–£–º–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**\n‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–µ–¥–æ–º—Å—Ç–≤–∞\n‚Ä¢ –ü—Ä–∞–≤–æ–≤—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏\n‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –æ–±—Ä–∞—â–µ–Ω–∏–π\n‚Ä¢ –≠—Å–∫–∞–ª–∞—Ü–∏—è –≤ –≤—ã—à–µ—Å—Ç–æ—è—â–∏–µ –æ—Ä–≥–∞–Ω—ã`,
          isBot: true,
          timestamp: new Date(),
          suggestions: ["/—ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ", "/–ø—Ä–∞–≤–∞", "/–∫–æ–Ω—Ç–∞–∫—Ç—ã", "–°–æ–∑–¥–∞—Ç—å –∂–∞–ª–æ–±—É"],
          commands: ["/—ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ", "/–ø—Ä–∞–≤–∞", "/–∫–æ–Ω—Ç–∞–∫—Ç—ã", "/—Å—Ç–∞—Ç—É—Å"],
          category: 'general'
        };
        
      case '/—ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ':
        return {
          id: Date.now().toString(),
          content: `üö® –≠–ö–°–¢–†–ï–ù–ù–´–ï –°–õ–£–ñ–ë–´ –£–ó–ë–ï–ö–ò–°–¢–ê–ù–ê:\n\nüÜò **–ï–¥–∏–Ω–∞—è —Å–ª—É–∂–±–∞ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞: 112**\n\nüî• –ü–æ–∂–∞—Ä–Ω–∞—è —Å–ª—É–∂–±–∞: 101\nüëÆ –ü–æ–ª–∏—Ü–∏—è: 102  \nüöë –°–∫–æ—Ä–∞—è –ø–æ–º–æ—â—å: 103\n‚ö° –ê–≤–∞—Ä–∏–π–Ω–∞—è –≥–∞–∑–æ–≤–∞—è —Å–ª—É–∂–±–∞: 104\nüö∞ –ê–≤–∞—Ä–∏–π–Ω–∞—è –≤–æ–¥–æ–ø—Ä–æ–≤–æ–¥–Ω–∞—è —Å–ª—É–∂–±–∞: 105\n\n‚ö†Ô∏è **–ü—Ä–∏ –∑–≤–æ–Ω–∫–µ —Å–æ–æ–±—â–∏—Ç–µ:**\n‚Ä¢ –ß—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ\n‚Ä¢ –¢–æ—á–Ω—ã–π –∞–¥—Ä–µ—Å\n‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç—Ä–∞–¥–∞–≤—à–∏—Ö\n‚Ä¢ –í–∞—à–µ –∏–º—è –∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n\nüè• **–¢–µ–ª–µ—Ñ–æ–Ω –¥–æ–≤–µ—Ä–∏—è:** 1050`,
          isBot: true,
          timestamp: new Date(),
          suggestions: ["–í—ã–∑–≤–∞—Ç—å 112", "–ù–µ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ", "–î—Ä—É–≥–∞—è –ø—Ä–æ–±–ª–µ–º–∞"],
          category: 'emergency'
        };
        
      case '/–ø—Ä–∞–≤–∞':
        return {
          id: Date.now().toString(),
          content: `‚öñÔ∏è –í–ê–®–ò –ü–†–ê–í–ê (${UZBEK_GOVERNMENT_KNOWLEDGE.legal_framework}):\n\nüìù **–ü—Ä–∞–≤–æ –Ω–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ:**\n‚Ä¢ –í –ª—é–±–æ–π –≥–æ—Å–æ—Ä–≥–∞–Ω\n‚Ä¢ –í –ø–∏—Å—å–º–µ–Ω–Ω–æ–π –∏ —É—Å—Ç–Ω–æ–π —Ñ–æ—Ä–º–µ\n‚Ä¢ –õ–∏—á–Ω–æ –∏–ª–∏ —á–µ—Ä–µ–∑ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è\n‚Ä¢ –ö–æ–ª–ª–µ–∫—Ç–∏–≤–Ω–æ\n\n‚è∞ **–°—Ä–æ–∫–∏ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è:**\n‚Ä¢ –û–±—ã—á–Ω—ã–µ –æ–±—Ä–∞—â–µ–Ω–∏—è: 15 –¥–Ω–µ–π\n‚Ä¢ –°–ª–æ–∂–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã: –¥–æ 30 –¥–Ω–µ–π\n‚Ä¢ –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ: –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ\n\nüîÑ **–ü—Ä–∞–≤–æ –Ω–∞ –æ–±–∂–∞–ª–æ–≤–∞–Ω–∏–µ:**\n‚Ä¢ –í –≤—ã—à–µ—Å—Ç–æ—è—â–∏–π –æ—Ä–≥–∞–Ω: 30 –¥–Ω–µ–π\n‚Ä¢ –í —Å—É–¥: 3 –º–µ—Å—è—Ü–∞\n‚Ä¢ –ù–∞ –±–µ–∑–¥–µ–π—Å—Ç–≤–∏–µ: –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è\n\nüí∞ **–ö–æ–º–ø–µ–Ω—Å–∞—Ü–∏—è —É—â–µ—Ä–±–∞ –ø—Ä–∏ –¥–æ–∫–∞–∑–∞–Ω–Ω–æ–º –Ω–∞—Ä—É—à–µ–Ω–∏–∏ –ø—Ä–∞–≤**`,
          isBot: true,
          timestamp: new Date(),
          suggestions: ["–ö–∞–∫ –æ–±–∂–∞–ª–æ–≤–∞—Ç—å", "–û–±—Ä–∞–∑—Ü—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤", "–°—Ä–æ–∫–∏"],
          category: 'legal'
        };
        
      case '/–∫–æ–Ω—Ç–∞–∫—Ç—ã':
        return {
          id: Date.now().toString(),
          content: `üìû –ö–û–ù–¢–ê–ö–¢–´ –ì–û–°–£–î–ê–†–°–¢–í–ï–ù–ù–´–• –û–†–ì–ê–ù–û–í:\n\nüèõÔ∏è **–ú–∞—Ö–∞–ª–ª–∏–Ω—Å–∫–∏–π –∫–æ–º–∏—Ç–µ—Ç:**\n‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: +998 (71) 123-45-67\n‚Ä¢ –í—Ä–µ–º—è: 9:00-18:00\n‚Ä¢ –ö–æ–º–ø–µ—Ç–µ–Ω—Ü–∏—è: –ñ–ö–•, —Å–∞–Ω–∏—Ç–∞—Ä–∏—è\n\nüè¢ **–•–æ–∫–∏–º–∏—è—Ç —Ä–∞–π–æ–Ω–∞:**\n‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: +998 (71) 234-56-78\n‚Ä¢ –í—Ä–µ–º—è: 8:30-17:30\n‚Ä¢ –ö–æ–º–ø–µ—Ç–µ–Ω—Ü–∏—è: —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç, –¥–æ—Ä–æ–≥–∏\n\nüèõÔ∏è **–ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–∞:**\n‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: +998 (71) 345-67-89\n‚Ä¢ –í—Ä–µ–º—è: 9:00-17:00\n‚Ä¢ –ö–æ–º–ø–µ—Ç–µ–Ω—Ü–∏—è: —Å–∏—Å—Ç–µ–º–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã\n\nüìß **–ï–¥–∏–Ω—ã–π –ø–æ—Ä—Ç–∞–ª:** my.gov.uz\n‚òéÔ∏è **–ì–æ—Ä—è—á–∞—è –ª–∏–Ω–∏—è:** 1100`,
          isBot: true,
          timestamp: new Date(),
          suggestions: ["–ú–∞—Ö–∞–ª–ª–∞", "–•–æ–∫–∏–º–∏—è—Ç", "–ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ", "my.gov.uz"],
          category: 'general'
        };
        
      default:
        return {
          id: Date.now().toString(),
          content: `‚ùì –ö–æ–º–∞–Ω–¥–∞ "${command}" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /–ø–æ–º–æ—â—å –¥–ª—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.`,
          isBot: true,
          timestamp: new Date(),
          suggestions: ["/–ø–æ–º–æ—â—å", "/—ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ", "/–ø—Ä–∞–≤–∞", "/–∫–æ–Ω—Ç–∞–∫—Ç—ã"],
          category: 'general'
        };
    }
  };

  const handleSendMessage = async () => {
    if (!input.trim()) return;

    const userMessage: Message = {
      id: Date.now().toString(),
      content: input,
      isBot: false,
      timestamp: new Date()
    };

    setMessages(prev => [...prev, userMessage]);
    setInput("");
    setIsTyping(true);

    // Simulate typing delay
    setTimeout(async () => {
      const botResponse = await generateBotResponse(input);
      setMessages(prev => [...prev, botResponse]);
      setIsTyping(false);
    }, 1000 + Math.random() * 1000);
  };

  const handleSuggestionClick = (suggestion: string) => {
    setInput(suggestion);
  };

  const getCategoryIcon = (category?: string) => {
    switch (category) {
      case 'emergency': return <AlertTriangle className="h-4 w-4 text-red-500" />;
      case 'legal': return <Scale className="h-4 w-4 text-blue-500" />;
      case 'routing': return <FileText className="h-4 w-4 text-green-500" />;
      default: return <Bot className="h-4 w-4 text-purple-500" />;
    }
  };

  if (!open) return null;

  return (
    <motion.div 
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      exit={{ opacity: 0, y: 20 }}
      className="fixed bottom-4 right-4 w-96 h-[600px] z-50"
    >
      <Card className="h-full flex flex-col shadow-2xl border-2 border-purple-200 bg-gradient-to-br from-white to-purple-50 dark:from-gray-900 dark:to-purple-900">
        <CardHeader className="p-4 bg-gradient-to-r from-purple-600 to-blue-600 text-white rounded-t-lg">
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-3">
              <div className="relative">
                <Sparkles className="h-6 w-6" />
                <motion.div 
                  className="absolute -top-1 -right-1 w-3 h-3 bg-green-400 rounded-full border-2 border-white"
                  animate={{ scale: [1, 1.2, 1] }}
                  transition={{ repeat: Infinity, duration: 2 }}
                />
              </div>
              <div>
                <CardTitle className="text-lg font-bold">MuxlisaAI</CardTitle>
                <p className="text-xs text-purple-100">–£–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ Muloqot Plus</p>
              </div>
            </div>
            <Button 
              variant="ghost" 
              size="sm" 
              onClick={() => onOpenChange(false)}
              className="text-white hover:bg-white/20"
            >
              <X className="h-4 w-4" />
            </Button>
          </div>
        </CardHeader>

        <CardContent className="flex-1 flex flex-col p-0">
          <ScrollArea className="flex-1 p-4">
            <div className="space-y-4">
              <AnimatePresence>
                {messages.map((message) => (
                  <motion.div
                    key={message.id}
                    initial={{ opacity: 0, y: 10 }}
                    animate={{ opacity: 1, y: 0 }}
                    exit={{ opacity: 0, y: -10 }}
                    className={`flex ${message.isBot ? 'justify-start' : 'justify-end'}`}
                  >
                    <div className={`max-w-[85%] ${message.isBot ? 'bg-gray-100 dark:bg-gray-800' : 'bg-purple-600 text-white'} rounded-lg p-3 shadow-md`}>
                      <div className="flex items-start gap-2">
                        {message.isBot && (
                          <div className="flex-shrink-0 mt-1">
                            {getCategoryIcon(message.category)}
                          </div>
                        )}
                        <div className="flex-1">
                          <div className="whitespace-pre-wrap text-sm">
                            {message.content}
                          </div>
                          
                          {message.suggestions && (
                            <div className="mt-3 flex flex-wrap gap-1">
                              {message.suggestions.map((suggestion, index) => (
                                <Button
                                  key={index}
                                  variant="outline"
                                  size="sm"
                                  className="text-xs h-6 px-2 border-purple-200 hover:bg-purple-100"
                                  onClick={() => handleSuggestionClick(suggestion)}
                                >
                                  {suggestion}
                                </Button>
                              ))}
                            </div>
                          )}
                          
                          <div className="flex items-center justify-between mt-2">
                            <div className="text-xs text-gray-500 dark:text-gray-400">
                              {message.timestamp.toLocaleTimeString()}
                            </div>
                            {message.isBot && (
                              <div className="flex items-center gap-1">
                                {message.category && (
                                  <Badge variant="outline" className="text-xs">
                                    {message.category}
                                  </Badge>
                                )}
                              </div>
                            )}
                          </div>
                        </div>
                      </div>
                    </div>
                  </motion.div>
                ))}
              </AnimatePresence>
              
              {isTyping && (
                <motion.div
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  className="flex justify-start"
                >
                  <div className="bg-gray-100 dark:bg-gray-800 rounded-lg p-3 shadow-md">
                    <div className="flex items-center gap-2">
                      <Bot className="h-4 w-4 text-purple-500" />
                      <div className="flex space-x-1">
                        <motion.div
                          className="w-2 h-2 bg-purple-500 rounded-full"
                          animate={{ y: [0, -5, 0] }}
                          transition={{ repeat: Infinity, duration: 0.6, delay: 0 }}
                        />
                        <motion.div
                          className="w-2 h-2 bg-purple-500 rounded-full"
                          animate={{ y: [0, -5, 0] }}
                          transition={{ repeat: Infinity, duration: 0.6, delay: 0.2 }}
                        />
                        <motion.div
                          className="w-2 h-2 bg-purple-500 rounded-full"
                          animate={{ y: [0, -5, 0] }}
                          transition={{ repeat: Infinity, duration: 0.6, delay: 0.4 }}
                        />
                      </div>
                    </div>
                  </div>
                </motion.div>
              )}
              <div ref={messagesEndRef} />
            </div>
          </ScrollArea>

          <Separator />
          
          <div className="p-4 bg-gray-50 dark:bg-gray-900 rounded-b-lg">
            <div className="flex items-center gap-2">
              <Input
                placeholder="–û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É..."
                value={input}
                onChange={(e) => setInput(e.target.value)}
                onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}
                className="flex-1 border-purple-200 focus:border-purple-400"
                disabled={isTyping}
              />
              <Button 
                onClick={handleSendMessage}
                disabled={!input.trim() || isTyping}
                className="bg-purple-600 hover:bg-purple-700 text-white"
                size="sm"
              >
                <Send className="h-4 w-4" />
              </Button>
            </div>
            
            <div className="flex items-center justify-between mt-2 text-xs text-gray-500">
              <div className="flex items-center gap-1">
                <Command className="h-3 w-3" />
                <span>–ö–æ–º–∞–Ω–¥—ã: /–ø–æ–º–æ—â—å /—ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ /–ø—Ä–∞–≤–∞</span>
              </div>
              <div className="flex items-center gap-1">
                <CheckCircle className="h-3 w-3 text-green-500" />
                <span>–û–Ω–ª–∞–π–Ω</span>
              </div>
            </div>
          </div>
        </CardContent>
      </Card>
    </motion.div>
  );
}